version: '3.8'

# Shared bits for all three services
x-ros-common: &ros-common
  build:
    context: .
    dockerfile: Dockerfile        # make sure it installs rmw_cyclonedds_cpp
  volumes:
    - ..:/home/dev/ros_ws
    - /dev/shm:/dev/shm           # ‚Üê share the host SHM for CycloneDDS
  working_dir: /home/dev/ros_ws
  network_mode: host
  ipc: host
  pid: host
  restart: always
  stdin_open: true
  tty: true
  environment:
    - ROS_DOMAIN_ID=0
    - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

services:
  app:
    <<: *ros-common
    container_name: ros2_dev_container
    volumes:
      - ..:/home/dev/ros_ws
      - /tmp/.X11-unix:/tmp/.X11-unix
    environment:
      - DISPLAY=${DISPLAY}
    entrypoint:
      - bash
      - -lc
      - |
        set -e
        source /opt/ros/jazzy/setup.bash
        source install/setup.bash
        exec bash

  scout:
    <<: *ros-common
    container_name: ros2_scout
    user: root
    cap_add:
      - CAP_NET_ADMIN
    restart: on-failure
    entrypoint:
      - bash
      - -lc
      - |
        echo "[scout] Bringing up CAN interface..."
        if ip link set can0 up type can bitrate 500000; then
          echo "[scout] CAN0 up at 500kbit"
        else
          echo "[scout] Could not bring up can0! -- continuing anyway"
        fi

        echo "[scout] Sourcing ROS2 workspace..."
        source /opt/ros/jazzy/setup.bash
        source install/setup.bash

        echo "[scout] Launching scout_base..."
        exec ros2 launch scout_base scout_mini_base.launch.py

  driver:
    <<: *ros-common
    container_name: ros2_driver
    depends_on:
      - scout
    entrypoint:
      - bash
      - -lc 
      - |
        source /opt/ros/jazzy/setup.bash
        source install/setup.bash
        exec ros2 launch nav2_tutorial fp_driver_node.launch \
          config:=fp_driver_config.yaml
